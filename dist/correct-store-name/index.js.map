{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/correct-store-name/index.ts"],"names":[],"mappings":";;AAIA,MAAM,MAAM,GAAoC;IAC9C,cAAc,EAAE,EAAE;IAClB,IAAI,EAAE;QACJ,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE;YACN,mBAAmB,EAAE,qDAAqD;SAC7E;QACD,IAAI,EAAE;YACF,WAAW,EAAE,gEAAgE;YAC7E,WAAW,EAAE,MAAM;SACtB;QACD,OAAO,EAAE,MAAM;QACf,cAAc,EAAE,IAAI;QACpB,MAAM,EAAE,EAAE;KACX;IACD,MAAM,EAAE,CAAC,OAAY,EAAE,EAAE,CAAC,CAAC;QACzB,UAAU,EAAE,CAAC,IAAS,EAAE,EAAE;YACtB,MAAM;YACN,+BAA+B;YAE/B,+CAA+C;YAC/C,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;gBACvB,6DAA6D;gBAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAA;gBACrD,2DAA2D;gBAC3D,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;oBAC1B,aAAa;oBACb,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;oBACxC,qCAAqC;oBACrC,MAAM,gBAAgB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC7E,2BAA2B;oBAC3B,OAAO,CAAC,MAAM,CAAC;wBACX,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,qBAAqB;wBAChC,IAAI,EAAE;4BACF,gBAAgB;yBACnB;wBACD,OAAO,EAAE;4BACL;gCACI,IAAI,EAAE,aAAa,gBAAgB,EAAE;gCACrC,GAAG,EAAE,UAAS,KAAU;oCACpB,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAA;gCACpD,CAAC;6BACJ;yBACJ;qBACJ,CAAC,CAAC;iBACN;aACJ;QACH,CAAC;KACJ,CAAC;CACH,CAAA;AAED,kBAAe,MAAM,CAAA","sourcesContent":["import { TSESLint } from '@typescript-eslint/utils'\n\ntype MessageIds = 'useCorrectStoreName'\n\nconst myRule: TSESLint.RuleModule<MessageIds> = {\n  defaultOptions: [],\n  meta: {\n    type: 'suggestion',\n    messages: {\n        useCorrectStoreName: \"Don't use store, use {{ correctStoreName }} instead\",\n    },\n    docs: {\n        description: \"Properly named stores are a lot easier to identify & work with\",\n        recommended: 'warn',\n    },\n    fixable: 'code',\n    hasSuggestions: true,\n    schema: [],\n  },\n  create: (context: any) => ({\n    Identifier: (node: any) => {\n        // ex.\n        // const store = useAuthStore()\n\n        // Triggers when a const variable name is store\n        if (node.name === 'store') {\n            // Get the name of the value we are trying to assign to store\n            const callee = node.parent.id.parent.init.callee.name\n            // Is it starts with use (ex. useAuthStore starts with use)\n            if (callee.startsWith('use')) {\n                // Remove use\n                const storeName = callee.split('use')[1]\n                // First caracter should be lowercase\n                const correctStoreName = storeName[0].toLowerCase() + storeName.substring(1);\n                // Report and suggest a fix\n                context.report({\n                    node: node,\n                    messageId: 'useCorrectStoreName',\n                    data: {\n                        correctStoreName,\n                    },\n                    suggest: [\n                        {\n                            desc: `Change to ${correctStoreName}`,\n                            fix: function(fixer: any) {\n                                return fixer.replaceText(node, correctStoreName)\n                            }\n                        },\n                    ]\n                });\n            }\n        }\n      }\n  }),\n}\n\nexport default myRule\n"]}